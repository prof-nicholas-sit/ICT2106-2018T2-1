@model IEnumerable<Prettyprinter.Models.Folder>
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Index";
    if (ViewBag.Path == null)
    {
        ViewBag.Path = "Root";
    }
}


<h3 style="text-transform:uppercase">@ViewBag.Path</h3>
<p>
    @{
        var createAttributes = new Dictionary<string, object>();
        createAttributes.Add("Id", "postCreateForm");
    }
    @using (Html.BeginForm("Create", "Document", FormMethod.Post, createAttributes))
    {
        @Html.Hidden("docName", null)
        @Html.Hidden("creationPath", (string)ViewBag.ServerPath)
        @Html.Hidden("isFile", 0)
    }

    <button type="button" onclick="createDocs(0)">Create New Folder</button> |
    <button type="button" onclick="createDocs(1)">Create New File</button>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Operations
            </th>
            <th>
                Date Created
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
        var attributes = new Dictionary<string, object>();
        attributes.Add("Id", "postActionForm");
        }
        @using (Html.BeginForm("Index", "Document", FormMethod.Post, attributes))
    {
        @Html.Hidden("id", null)
        @Html.Hidden("action", null)
        @Html.Hidden("actionParameter", null)
        @foreach (var item in Model)
    {
        <tr>
            <td style="align-content:center">
                @if (item.type == 0)
    {
            <img src="~/images/folder.png" style="width:50px;height:50px" />
}
else
{
            <img src="~/images/Filetype.png" style="width:50px;height:50px" />}
                &nbsp;
                @if (item.type == 0)
                {
                    @Html.ActionLink(item.name, "Index", "Document", new { param = item.name, id = item._id }, null)
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.name)
                }
            </td>

           
            <td style="vertical-align:middle">
                <button type="button" id="r+@item._id" name="@item.name" onclick="renameFile(this.id, this.name)">Rename</button>
                <button type="button" id="d+@item._id" name="@item.name" onclick="deleteFile(this.id, this.name)">Delete</button>
                @if (item.type == 1)
            {
                <button type="button" id="@item._id" name="@item.name" onclick="moveFile(this.id, this.name)">Move</button>
                <button type="button" id="@item._id" name="@item.name" onclick="copyFile(this.id, this.name)">Copy</button>
        }
            </td>
            <td style="vertical-align:middle">
                @Html.DisplayFor(modelItem => item.date)
            </td>
        </tr>
}
}
        @{
        var deleteAttributes = new Dictionary<string, object>();
        deleteAttributes.Add("Id", "postDeleteForm");
        }
        @using (Html.BeginForm("Delete", "Document", FormMethod.Post, deleteAttributes))
    {
        @Html.Hidden("deleteId", null)
}

        @{
        var moveAttributes = new Dictionary<string, object>();
        moveAttributes.Add("Id", "postMoveForm");
        }
        @using (Html.BeginForm("Move", "Document", FormMethod.Post, moveAttributes))
    {
        @Html.Hidden("moveId", null)
        @Html.Hidden("movePath", null)
}

        @{
        var copyAttributes = new Dictionary<string, object>();
        copyAttributes.Add("Id", "postCopyForm");
        }
        @using (Html.BeginForm("Copy", "Document", FormMethod.Post, moveAttributes))
    {
        @Html.Hidden("copyId", null)
        @Html.Hidden("copyPath", null)
}

        @{
        var renameAttributes = new Dictionary<string, object>();
        renameAttributes.Add("Id", "postRenameForm");
        }
        @using (Html.BeginForm("Rename", "Document", FormMethod.Post, renameAttributes))
    {
        @Html.Hidden("renameId", null)
        @Html.Hidden("newName", null)

}


    </tbody>
</table>
<script type="text/javascript">
    function createDocs(type) {
        var isFile = document.getElementById("isFile");
        if (type == 0) {
            var name = prompt("What would you like to name the new folder?");
            isFile.value = 0;
        }
        else {
            var name = prompt("What would you like to name the new file?");
            isFile.value = 1;
        }
        if (name != null && name != "") {
            var newDocName = document.getElementById("docName");
            newDocName.value = name;
            alert(isFile.value);
            document.getElementById("postCreateForm").submit();
        }
    }
    function renameFile(id, originalFileName) {
        var fileName = prompt("What would you like to rename the file to?", originalFileName);
        if (fileName != null && fileName != "" && fileName.length != 0) {
            var renameId = document.getElementById("renameId");
            renameId.value = id.substring(2);
            var renameName = document.getElementById("newName");
            renameName.value = fileName;
            document.getElementById("postRenameForm").submit();
        }
    }
    function deleteFile(id, fileName) {
        var fileName = confirm("Are you sure you want to delete the file - " + fileName + " ?");
        if (fileName == true) {
            var hiddenId = document.getElementById("deleteId");
            hiddenId.value = id.substring(2);
            document.getElementById("postDeleteForm").submit();
        }
    }
    function moveFile(id, fileName) {
        // prompt user for new filepath
        var newFilename = prompt("Input a new fileName path to move to: ");

        // proceed if user input something
        if (newFilename != 0 && newFilename != "") {
            // confirmation to proceed
            var fileName = confirm("Are you sure you want to move the file - " + fileName + " ?");
            if (fileName == true) {
                // get the value of the moce element
                var hiddenPath = document.getElementById("movePath");
                hiddenPath.value = newFilename;
                var hiddenId = document.getElementById("moveId");
                hiddenId.value = id;
                document.getElementById("postMoveForm").submit();
            }
        }
    }
    function copyFile(id, fileName) {
        // prompt user for new filepath
        var newFilename = prompt("Input a new fileName path to copy to: ");

        // proceed if user input something
        if (newFilename != 0 && newFilename != "") {
            // confirmation to proceed
            var fileName = confirm("Are you sure you want to copy the file - " + fileName + " ?");
            if (fileName == true) {
                // get the value of the moce element
                var hiddenPath = document.getElementById("copyPath");
                hiddenPath.value = newFilename;
                var hiddenId = document.getElementById("copyId");
                hiddenId.value = id;
                document.getElementById("postCopyForm").submit();
            }
        }
    }
</script>
